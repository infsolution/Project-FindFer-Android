public class ViewPagerAdapter extends FragmentStatePagerAdapter {

    CharSequence Titles[]; // This will Store the Titles of the Tabs which are Going to be passed when ViewPagerAdapter is created
    int NumbOfTabs; // Store the number of tabs, this will also be passed when the ViewPagerAdapter is created


    // Build a Constructor and assign the passed Values to appropriate values in the class
    public ViewPagerAdapter(FragmentManager fm, CharSequence mTitles[], int mNumbOfTabsumb) {
        super(fm);

        this.Titles = mTitles;
        this.NumbOfTabs = mNumbOfTabsumb;

    }

    @Override
    public Fragment getItem(int position) {

        if (position == 0) // INICIO
        {
            Log.i("EXECUTO","INICIO");
            InicioFragment inicioFragment = new InicioFragment();
            return inicioFragment;
        }
        if (position == 1) // DESTAQUES
        {
            Log.i("EXECUTO","DESTAQUE");
            DestaquesFragment destaquesFragment = new DestaquesFragment();
            return destaquesFragment;
        }
        if (position == 2) // POPULARES
        {
            Log.i("EXECUTO","POPULAR");
            PopularesFragment popularesFragment = new PopularesFragment();
            return popularesFragment;
        }
        if (position == 3) // MAIS VENDIDOS
        {
            Log.i("EXECUTO","MAIS VENDIDO");
            MaisVendidosFragment maisVendidosFragment = new MaisVendidosFragment();
            return maisVendidosFragment;
        } else             // PROMOÇÕES
        {
            Log.i("EXECUTO","PROMOCOES");
            PromocoesFragment promocoesFragment = new PromocoesFragment();
            return promocoesFragment;
        }

    }

    // This method return the titles for the Tabs in the Tab Strip

    @Override
    public CharSequence getPageTitle(int position) {
        return Titles[position];
    }

    // This method return the Number of tabs for the tabs Strip

    @Override
    public int getCount() {
        return NumbOfTabs;
    }
}

Fragment

public class InicioFragment extends Fragment {

    RecyclerView recyclerView;
    SimpleRecyclerAdapter adapter;
    CardView listItem;
    List<Produto> list;
    Context context;
    View view;
    String cam = "http://flixtecnologia.com.br/";
    protected SwipeRefreshLayout swipeRefreshLayout;

    public InicioFragment() {
    }

    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        view = inflater.inflate(R.layout.fragment_inicio, container, false);


        listItem = (CardView) view.findViewById(R.id.cardlist_item);
        recyclerView = (RecyclerView) view.findViewById(R.id.recyclerview_inicio);


        recyclerView.setHasFixedSize(true);
        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
        recyclerView.setItemAnimator(new DefaultItemAnimator());



        carregaLista();

        swipeRefreshLayout = (SwipeRefreshLayout) view.findViewById(R.id.srl_swipe_inicio);

        swipeRefreshLayout.setOnRefreshListener(

                new SwipeRefreshLayout.OnRefreshListener() {
                    @Override
                    public void onRefresh() {

                        if (UtilTCM.verifyConnection(getActivity())) {
                            carregaLista();
                            new Thread(new Runnable() {
                                public void run() {
                                    SystemClock.sleep(2000);
                                    getActivity().runOnUiThread(new Runnable() {
                                        public void run() {
                                            swipeRefreshLayout.setRefreshing(false);
                                        }
                                    });
                                }
                            }).start();

                        } else {
                            swipeRefreshLayout.setRefreshing(false);

                            android.support.design.widget.Snackbar.make(view, "Sem Conexão.Verifique sua Rede WiFi ou 3G.", android.support.design.widget.Snackbar.LENGTH_LONG)
                                    .setAction("Ok", new View.OnClickListener() {
                                        @Override
                                        public void onClick(View v) {
                                            Intent it = new Intent(Settings.ACTION_WIFI_SETTINGS);
                                            startActivity(it);
                                        }
                                    })
                                    .setActionTextColor(getActivity().getResources().getColor(R.color.coloLink))
                                    .show();

                        }
                    }

                }
        );


        return view;

    }

    @Override
    public void onResume() {
        super.onResume();
    }



    private void carregaLista() {
        try {
            list = new ListarProdutos().execute().get();

            if (adapter == null) {
                Log.i("ADPTER","NULLL");

                adapter = new SimpleRecyclerAdapter(getContext(), list);

                recyclerView.setAdapter(adapter);

                context = view.getContext();

                adapter.SetOnItemClickListener(new SimpleRecyclerAdapter.OnItemClickListener() {
                    @Override
                    public void onItemClick(View view, int position) {

                        Intent i = new Intent(context, ProductActivity.class);
                        i.putExtra("produto", (Serializable) list.get(position));
                        startActivity(i);

                    }
                });
            } else {
                Log.i("ADPTER","CARREGADO");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

        @Override
        protected void onPostExecute(ArrayList arrayList) {
            super.onPostExecute(arrayList);
        }
    }

}
